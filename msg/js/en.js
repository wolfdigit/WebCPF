// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.en');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Add Comment";
Blockly.Msg.AUTH = "Please authorize this app to enable your work to be saved and to allow it to be shared by you.";
Blockly.Msg.CHANGE_VALUE_TITLE = "Change value:";
Blockly.Msg.CHAT = "Chat with your collaborator by typing in this box!";
Blockly.Msg.CLEAN_UP = "Clean up Blocks";
Blockly.Msg.COLLAPSE_ALL = "Collapse Blocks";
Blockly.Msg.COLLAPSE_BLOCK = "Collapse Block";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "colour 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "colour 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg.COLOUR_BLEND_RATIO = "ratio";
Blockly.Msg.COLOUR_BLEND_TITLE = "blend";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Blends two colours together with a given ratio (0.0 - 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://en.wikipedia.org/wiki/Color";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Choose a colour from the palette.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";
Blockly.Msg.COLOUR_RANDOM_TITLE = "random colour";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Choose a colour at random.";
Blockly.Msg.COLOUR_RGB_BLUE = "blue";
Blockly.Msg.COLOUR_RGB_GREEN = "green";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "red";
Blockly.Msg.COLOUR_RGB_TITLE = "colour with";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Create a colour with the specified amount of red, green, and blue. All values must be between 0 and 100.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "break out of loop";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "continue with next iteration of loop";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Break out of the containing loop.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Skip the rest of this loop, and continue with the next iteration.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Warning: This block may only be used within a loop.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";
Blockly.Msg.CONTROLS_FOREACH_TITLE = "for each item %1 in list %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "For each item in a list, set the variable '%1' to the item, and then do some statements.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";
Blockly.Msg.CONTROLS_FOR_TITLE = "count with %1 from %2 to %3 by %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Have the variable '%1' take on the values from the start number to the end number, counting by the specified interval, and do the specified blocks.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Add a condition to the if block.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Add a final, catch-all condition to the if block.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Add, remove, or reorder sections to reconfigure this if block.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "else";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "else if";
Blockly.Msg.CONTROLS_IF_MSG_IF = "if";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "If a value is true, then do some statements.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "If a value is true, then do the first block of statements. Otherwise, do the second block of statements.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.";
Blockly.Msg.CONTROLS_REPEAT_FOREVER = "Repeat ";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "do";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "repeat %1 times";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Do some statements several times.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "repeat until";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "repeat while";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "While a value is false, then do some statements.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "While a value is true, then do some statements.";
Blockly.Msg.CPFAOP_CONTENT_UPLOAD_RECORD_ID = "Record ID";
Blockly.Msg.CPFAOP_CONTENT_UPLOAD_SERVICE_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPFAOP_CONTENT_UPLOAD_SERVICE_TITLE = "AOP Upload Data Set";
Blockly.Msg.CPFAOP_CONTENT_UPLOAD_SERVICE_TOOLTIP = "AOP Upload Data Set";
Blockly.Msg.CPFAOP_CONTENT_UPLOAD_VALUE_FIELD_1 = "Value1";
Blockly.Msg.CPFAOP_CONTENT_UPLOAD_VALUE_FIELD_2 = "Value2";
Blockly.Msg.CPFAOP_CONTENT_UPLOAD_VALUE_FIELD_3 = "Value3";
Blockly.Msg.CPFAOP_DELAY_TIME_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPFAOP_DELAY_TIME_SET = "Time(Sec.)";
Blockly.Msg.CPFAOP_DELAY_TIME_TITLE = "Delay";
Blockly.Msg.CPFAOP_DELAY_TIME_TOOLTIP = "CPF delay time";
Blockly.Msg.CPFAOP_JSONDATA_DOWNLOAD_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPFAOP_JSONDATA_DOWNLOAD_RECORD_ID = "Record ID";
Blockly.Msg.CPFAOP_JSONDATA_DOWNLOAD_TITLE = "AOP Download Data";
Blockly.Msg.CPFAOP_JSONDATA_DOWNLOAD_TOOLTIP = "AOP download data";
Blockly.Msg.CPFAOP_JSONDATA_PARSE_FROM = " From ";
Blockly.Msg.CPFAOP_JSONDATA_PARSE_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPFAOP_JSONDATA_PARSE_TITLE = "JSON Data Parse";
Blockly.Msg.CPFAOP_JSONDATA_PARSE_TOOLTIP = "Json Data Parse";
Blockly.Msg.CPFAOP_JSONDATA_PARSE_VALUE_ID = " Get ";
Blockly.Msg.CPFAOP_JSONDATA_UPLOAD_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPFAOP_JSONDATA_UPLOAD_RECORD_ID = "Record ID";
Blockly.Msg.CPFAOP_JSONDATA_UPLOAD_TITLE = "AOP Upload Data";
Blockly.Msg.CPFAOP_JSONDATA_UPLOAD_TOOLTIP = "AOP Upload Data";
Blockly.Msg.CPFAOP_JSONDATA_UPLOAD_VALUE = "JSON DATA";
Blockly.Msg.CPF_CONTROL_REPEAT = "Set CPF control repeat";
Blockly.Msg.CPF_EXTEN_ADXL345_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_ADXL345_SCL = "SCL Pin#";
Blockly.Msg.CPF_EXTEN_ADXL345_SDA = "SDA Pin#";
Blockly.Msg.CPF_EXTEN_ADXL345_TITLE = "(ADXL345)3-Axis Accelerometer";
Blockly.Msg.CPF_EXTEN_ADXL345_TOOLTIP = "(ADXL345)3-Axis Accelerometer return and setting";
Blockly.Msg.CPF_EXTEN_ADXL345_XYZ = "Get XYZ value";
Blockly.Msg.CPF_EXTEN_BLUE_LED_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_BLUE_LED_TITLE = "Blue Led ";
Blockly.Msg.CPF_EXTEN_BLUE_LED_TOOLTIP = "Turn the blue led on/off";
Blockly.Msg.CPF_EXTEN_COILLATCH_RELAY_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_COILLATCH_RELAY_TITLE = "2 Coil Latching Relay ";
Blockly.Msg.CPF_EXTEN_COILLATCH_RELAY_TOOLTIP = "This module is based on 2-Coil Latching Relay";
Blockly.Msg.CPF_EXTEN_COLOR_FLASH_LED_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_COLOR_FLASH_LED_TITLE = "Color Flash LED ";
Blockly.Msg.CPF_EXTEN_COLOR_FLASH_LED_TOOLTIP = "Enable/Disable Color Flash LED";
Blockly.Msg.CPF_EXTEN_DRY_REED_RELAY_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_DRY_REED_RELAY_TITLE = "Dry-Reed Relay ";
Blockly.Msg.CPF_EXTEN_DRY_REED_RELAY_TOOLTIP = "It is a relay module which works through magnetizing the vibration reed via the current in the coils";
Blockly.Msg.CPF_EXTEN_DS18B20_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_DS18B20_TITLE = "(DS18B20) Water Temperature Sensor";
Blockly.Msg.CPF_EXTEN_DS18B20_TOOLTIP = "Get the status of water temperature";
Blockly.Msg.CPF_EXTEN_ELECTRO_MAGNET_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_ELECTRO_MAGNET_TITLE = "Electromagnet ";
Blockly.Msg.CPF_EXTEN_ELECTRO_MAGNET_TOOLTIP = "The magnetic field of all the turns of wire passes through the center of the coil, creating a strong magnetic field there";
Blockly.Msg.CPF_EXTEN_GET_VALUE = "Get Value";
Blockly.Msg.CPF_EXTEN_GREEN_LED_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_GREEN_LED_TITLE = "Green Led ";
Blockly.Msg.CPF_EXTEN_GREEN_LED_TOOLTIP = "Turn the green led on/off";
Blockly.Msg.CPF_EXTEN_I2CLCD_BACKLIGHT_BLUE = "Blue";
Blockly.Msg.CPF_EXTEN_I2CLCD_BACKLIGHT_GREEN = "Green";
Blockly.Msg.CPF_EXTEN_I2CLCD_BACKLIGHT_RED = "Red";
Blockly.Msg.CPF_EXTEN_I2CLCD_CLEAR_TITLE = "Clear";
Blockly.Msg.CPF_EXTEN_I2CLCD_CLEAR_TOOLTIP = "Clears the LCD screen and positions the cursor in the upper-left corner.";
Blockly.Msg.CPF_EXTEN_I2CLCD_DISPLAY = "Set Display ";
Blockly.Msg.CPF_EXTEN_I2CLCD_DISPLAY_OFF = "Off";
Blockly.Msg.CPF_EXTEN_I2CLCD_DISPLAY_ON = "On";
Blockly.Msg.CPF_EXTEN_I2CLCD_DISPLAY_TOOLTIP = "Enable/Disable the RGB LCD";
Blockly.Msg.CPF_EXTEN_I2CLCD_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_I2CLCD_PRINT_TITLE = "Print";
Blockly.Msg.CPF_EXTEN_I2CLCD_PRINT_TOOLTIP = "Prints text to the LCD.";
Blockly.Msg.CPF_EXTEN_I2CLCD_SETCURSOR_COL = "COL.";
Blockly.Msg.CPF_EXTEN_I2CLCD_SETCURSOR_ROW = "ROW";
Blockly.Msg.CPF_EXTEN_I2CLCD_SETCURSOR_TITLE = "setCursor";
Blockly.Msg.CPF_EXTEN_I2CLCD_SETCURSOR_TOOLTIP = "Position the LCD cursor.";
Blockly.Msg.CPF_EXTEN_I2CLCD_SET_BACKLIGHT_TITLE = "LCD Backlight";
Blockly.Msg.CPF_EXTEN_I2CLCD_SET_BACKLIGHT_TOOLTIP = "Set Backlight color.";
Blockly.Msg.CPF_EXTEN_I2CLCD_TITLE = "RGB LCD(I2C)";
Blockly.Msg.CPF_EXTEN_IN_ALCOHOL_GET_VALUE = "Get Value";
Blockly.Msg.CPF_EXTEN_IN_ALCOHOL_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_ALCOHOL_PIN = "Pin#";
Blockly.Msg.CPF_EXTEN_IN_ALCOHOL_TITLE = "Alcohol Sensor(A)";
Blockly.Msg.CPF_EXTEN_IN_ALCOHOL_TOOLTIP = "Get value of alcohol sensor";
Blockly.Msg.CPF_EXTEN_IN_BUTTON_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_BUTTON_TITLE = "Button";
Blockly.Msg.CPF_EXTEN_IN_BUTTON_TOOLTIP = "Get the button status";
Blockly.Msg.CPF_EXTEN_IN_CO2_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_CO2_PPM = "CO2";
Blockly.Msg.CPF_EXTEN_IN_CO2_TEMPERATURE = "Temperature";
Blockly.Msg.CPF_EXTEN_IN_CO2_TITLE = "CO2 Sensor";
Blockly.Msg.CPF_EXTEN_IN_CO2_TOOLTIP = "Get the status of CO2 or temperature";
Blockly.Msg.CPF_EXTEN_IN_COLLISION_SENSOR_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_COLLISION_SENSOR_TITLE = "Collision Sensor";
Blockly.Msg.CPF_EXTEN_IN_COLLISION_SENSOR_TOOLTIP = "Get the status of Collision Sensor";
Blockly.Msg.CPF_EXTEN_IN_ELECSENSOR_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_ELECSENSOR_TITLE = "Electricity Sensor";
Blockly.Msg.CPF_EXTEN_IN_ELECSENSOR_TOOLTIP = "Get the status of Electricity Sensor";
Blockly.Msg.CPF_EXTEN_IN_EMG_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_EMG_TITLE = "Muscle EMG Sensor";
Blockly.Msg.CPF_EXTEN_IN_EMG_TOOLTIP = "Get the status of Muscle EMG Sensor";
Blockly.Msg.CPF_EXTEN_IN_FLAMESENSOR_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_FLAMESENSOR_TITLE = "Flame Sensor";
Blockly.Msg.CPF_EXTEN_IN_FLAMESENSOR_TOOLTIP = "Get the status of Flame Sensor";
Blockly.Msg.CPF_EXTEN_IN_HCHO_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_HCHO_TITLE = "VOC Gas Sensor(HCHO)";
Blockly.Msg.CPF_EXTEN_IN_HCHO_TOOLTIP = "Get value of VOC gas sensor(HCHO)";
Blockly.Msg.CPF_EXTEN_IN_IRTEMPERATURE_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_IRTEMPERATURE_TITLE = "Infrared Temperature";
Blockly.Msg.CPF_EXTEN_IN_IRTEMPERATURE_TOOLTIP = "Get the status of Infrared Temperature Sensor";
Blockly.Msg.CPF_EXTEN_IN_JOYSTICK_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_JOYSTICK_TOOLTIP = "Get the status of Joystick";
Blockly.Msg.CPF_EXTEN_IN_JOYSTICK_X_TITLE = "Joystick direction-X";
Blockly.Msg.CPF_EXTEN_IN_JOYSTICK_Y_TITLE = "Joystick direction-Y";
Blockly.Msg.CPF_EXTEN_IN_LIGHTSENSOR_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_LIGHTSENSOR_TITLE = "Light Sensor";
Blockly.Msg.CPF_EXTEN_IN_LIGHTSENSOR_TOOLTIP = "Get the status of Light Sensor";
Blockly.Msg.CPF_EXTEN_IN_LINEFINDER_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_LINEFINDER_TITLE = "Line Finder";
Blockly.Msg.CPF_EXTEN_IN_LINEFINDER_TOOLTIP = "Get the status of Line Finder Sensor";
Blockly.Msg.CPF_EXTEN_IN_LOUDNESS_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_LOUDNESS_TITLE = "Loudness Sensor";
Blockly.Msg.CPF_EXTEN_IN_LOUDNESS_TOOLTIP = "Get the status of Loudness Sensor";
Blockly.Msg.CPF_EXTEN_IN_LUMINANACE_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_LUMINANACE_TITLE = "Luminanace Sensor";
Blockly.Msg.CPF_EXTEN_IN_LUMINANACE_TOOLTIP = "Get the status of Luminanace Sensor";
Blockly.Msg.CPF_EXTEN_IN_MAGNETIC_SWITCH_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_MAGNETIC_SWITCH_TITLE = "Magnetic Switch";
Blockly.Msg.CPF_EXTEN_IN_MAGNETIC_SWITCH_TOOLTIP = "Get the status of magnetic switch";
Blockly.Msg.CPF_EXTEN_IN_MOISTURE_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_MOISTURE_TITLE = "Moisture Sensor";
Blockly.Msg.CPF_EXTEN_IN_MOISTURE_TOOLTIP = "Get the status of Moisture Sensor";
Blockly.Msg.CPF_EXTEN_IN_MQ2_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_MQ2_TITLE = "Combustible Gas Sensor(MQ2)";
Blockly.Msg.CPF_EXTEN_IN_MQ2_TOOLTIP = "Get value of combustible gas sensor(MQ2)";
Blockly.Msg.CPF_EXTEN_IN_MQ3_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_MQ3_TITLE = "Alcohol Sensor(MQ3)";
Blockly.Msg.CPF_EXTEN_IN_MQ3_TOOLTIP = "Get value of alcohol sensor(MQ3)";
Blockly.Msg.CPF_EXTEN_IN_MQ5_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_MQ5_TITLE = "Natural Gas Sensor(MQ5)";
Blockly.Msg.CPF_EXTEN_IN_MQ5_TOOLTIP = "Get value of natural gas sensor(MQ5)";
Blockly.Msg.CPF_EXTEN_IN_MQ9_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_MQ9_TITLE = "Carbon Monoxide Sensor(MQ9)";
Blockly.Msg.CPF_EXTEN_IN_MQ9_TOOLTIP = "Get value of carbon monoxide sensor(MQ9)";
Blockly.Msg.CPF_EXTEN_IN_O2_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_O2_TITLE = "Oxygen Sensor(O2)";
Blockly.Msg.CPF_EXTEN_IN_O2_TOOLTIP = "Get value of oxygen sensor";
Blockly.Msg.CPF_EXTEN_IN_PIR_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_PIR_TITLE = "PIR Motion Sensor";
Blockly.Msg.CPF_EXTEN_IN_PIR_TOOLTIP = "Get the status of PIR Motion Sensor";
Blockly.Msg.CPF_EXTEN_IN_PM25_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_PM25_TITLE = "Dust Sensor(PM2.5)";
Blockly.Msg.CPF_EXTEN_IN_PM25_TOOLTIP = "Get the status of dust sensor";
Blockly.Msg.CPF_EXTEN_IN_ROTARY_VR_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_ROTARY_VR_TITLE = "Rotary Angle Sensor";
Blockly.Msg.CPF_EXTEN_IN_ROTARY_VR_TOOLTIP = "Get the status of rotary angle sensor";
Blockly.Msg.CPF_EXTEN_IN_SHARPIR_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_SHARPIR_TITLE = "Sharp IR Sensor";
Blockly.Msg.CPF_EXTEN_IN_SHARPIR_TOOLTIP = "Get the status of Sharp IR Sensor";
Blockly.Msg.CPF_EXTEN_IN_SKINGSR_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_SKINGSR_TITLE = "Skin GSR Sensor";
Blockly.Msg.CPF_EXTEN_IN_SKINGSR_TOOLTIP = "Get the status of Skin GSR Sensor";
Blockly.Msg.CPF_EXTEN_IN_SLIDE_VR_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_SLIDE_VR_TITLE = "Slide Potentiometer";
Blockly.Msg.CPF_EXTEN_IN_SLIDE_VR_TOOLTIP = "Get the status of slide potentiometer";
Blockly.Msg.CPF_EXTEN_IN_SOUNDSENSOR_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_SOUNDSENSOR_TITLE = "Sound Sensor";
Blockly.Msg.CPF_EXTEN_IN_SOUNDSENSOR_TOOLTIP = "Get the status of Sound Sensor";
Blockly.Msg.CPF_EXTEN_IN_SWITCH_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_SWITCH_TITLE = "Slide Switch";
Blockly.Msg.CPF_EXTEN_IN_SWITCH_TOOLTIP = "Get the switch status";
Blockly.Msg.CPF_EXTEN_IN_TEMPSENSOR_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_TEMPSENSOR_TITLE = "Temperature Sensor";
Blockly.Msg.CPF_EXTEN_IN_TEMPSENSOR_TOOLTIP = "Get the status of Temperature Sensor";
Blockly.Msg.CPF_EXTEN_IN_TILT_SWITCH_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_TILT_SWITCH_TITLE = "Tilt Switch";
Blockly.Msg.CPF_EXTEN_IN_TILT_SWITCH_TOOLTIP = "Get the status of tilt switch";
Blockly.Msg.CPF_EXTEN_IN_TOUCH_SENSOR_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_TOUCH_SENSOR_TITLE = "Touch Sensor";
Blockly.Msg.CPF_EXTEN_IN_TOUCH_SENSOR_TOOLTIP = "Get the status of touch sensor";
Blockly.Msg.CPF_EXTEN_IN_UVSENSOR_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_UVSENSOR_TITLE = "UV Sensor";
Blockly.Msg.CPF_EXTEN_IN_UVSENSOR_TOOLTIP = "Get the status of UV Sensor";
Blockly.Msg.CPF_EXTEN_IN_VIBRATION_SENSOR_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_VIBRATION_SENSOR_TITLE = "Piezo Vibration Sensor";
Blockly.Msg.CPF_EXTEN_IN_VIBRATION_SENSOR_TOOLTIP = "Get the status of Piezo Vibration Sensor";
Blockly.Msg.CPF_EXTEN_IN_VOLTAGEDIV_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_VOLTAGEDIV_TITLE = "Voltage Divider";
Blockly.Msg.CPF_EXTEN_IN_VOLTAGEDIV_TOOLTIP = "Get the status of Voltage Divider";
Blockly.Msg.CPF_EXTEN_IN_WATERSENSOR_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_IN_WATERSENSOR_TITLE = "Water Sensor";
Blockly.Msg.CPF_EXTEN_IN_WATERSENSOR_TOOLTIP = "Get the status of Water Sensor";
Blockly.Msg.CPF_EXTEN_LEDBAR_CLK = "CLK Pin#";
Blockly.Msg.CPF_EXTEN_LEDBAR_DIO = "DIO Pin#";
Blockly.Msg.CPF_EXTEN_LEDBAR_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_LEDBAR_SET_LEVEL = "Level(0~10)";
Blockly.Msg.CPF_EXTEN_LEDBAR_TITLE = "LED Bar";
Blockly.Msg.CPF_EXTEN_LEDBAR_TOOLTIP = "LED Bar level setting";
Blockly.Msg.CPF_EXTEN_LED_STRING_LIGHT_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_LED_STRING_LIGHT_TITLE = "LED String Light ";
Blockly.Msg.CPF_EXTEN_LED_STRING_LIGHT_TOOLTIP = "Turn string light on/off";
Blockly.Msg.CPF_EXTEN_LED_STRIP_DRIVER_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_LED_STRIP_DRIVER_TITLE = "LED Strip Driver ";
Blockly.Msg.CPF_EXTEN_LED_STRIP_DRIVER_TOOLTIP = "Turn LED Strip on/off";
Blockly.Msg.CPF_EXTEN_MINI_FAN_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_MINI_FAN_TITLE = "Mini Fan ";
Blockly.Msg.CPF_EXTEN_MINI_FAN_TOOLTIP = "Enable/Disable Mini Fan";
Blockly.Msg.CPF_EXTEN_MOSFET_RELAY_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_MOSFET_RELAY_TITLE = "MOSFET Relay ";
Blockly.Msg.CPF_EXTEN_MOSFET_RELAY_TOOLTIP = "MOSFET enables you to control higher voltage";
Blockly.Msg.CPF_EXTEN_PIN = "Pin#";
Blockly.Msg.CPF_EXTEN_PIN1 = "Pin1#";
Blockly.Msg.CPF_EXTEN_PIN2 = "Pin2#";
Blockly.Msg.CPF_EXTEN_PURPLE_LED_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_PURPLE_LED_TITLE = "Purple Led ";
Blockly.Msg.CPF_EXTEN_PURPLE_LED_TOOLTIP = "Turn the purple led on/off";
Blockly.Msg.CPF_EXTEN_RECORDER_PLAY_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_RECORDER_PLAY_TITLE = "Recorder:Play ";
Blockly.Msg.CPF_EXTEN_RECORDER_PLAY_TOOLTIP = "Recorder play";
Blockly.Msg.CPF_EXTEN_RECORDER_RECORDING_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_RECORDER_RECORDING_TITLE = "Recorder:Recording ";
Blockly.Msg.CPF_EXTEN_RECORDER_RECORDING_TOOLTIP = "Voice recording";
Blockly.Msg.CPF_EXTEN_RED_LED_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_RED_LED_TITLE = "Red Led";
Blockly.Msg.CPF_EXTEN_RED_LED_TOOLTIP = "Turn the red led on/off.";
Blockly.Msg.CPF_EXTEN_RELAY_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_RELAY_TITLE = "Relay ";
Blockly.Msg.CPF_EXTEN_RELAY_TOOLTIP = " When set to HIGH, the LED will light up and the relay will close allowing current to flow.";
Blockly.Msg.CPF_EXTEN_RGB_COLOR_LED_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_RGB_COLOR_LED_TITLE = "RGB COLOR LED ";
Blockly.Msg.CPF_EXTEN_RGB_COLOR_LED_TOOLTIP = "Turn RGB COLOR LED on/off";
Blockly.Msg.CPF_EXTEN_SENSOR_DHT11_DATATYPE = "Data Type";
Blockly.Msg.CPF_EXTEN_SENSOR_DHT11_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_SENSOR_DHT11_HUMI = "Humidity";
Blockly.Msg.CPF_EXTEN_SENSOR_DHT11_SETTING_PIN = "Pin#";
Blockly.Msg.CPF_EXTEN_SENSOR_DHT11_TEMP = "Temperature";
Blockly.Msg.CPF_EXTEN_SENSOR_DHT11_TITLE = "DHT11";
Blockly.Msg.CPF_EXTEN_SENSOR_DHT11_TOOLTIP = "get temperature and humidity data";
Blockly.Msg.CPF_EXTEN_SENSOR_DHT22_DATATYPE = "Data Type";
Blockly.Msg.CPF_EXTEN_SENSOR_DHT22_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_SENSOR_DHT22_HUMI = "Humidity";
Blockly.Msg.CPF_EXTEN_SENSOR_DHT22_SETTING_PIN = "Pin#";
Blockly.Msg.CPF_EXTEN_SENSOR_DHT22_TEMP = "Temperature";
Blockly.Msg.CPF_EXTEN_SENSOR_DHT22_TITLE = "DHT22";
Blockly.Msg.CPF_EXTEN_SENSOR_DHT22_TOOLTIP = "get temperature and humidity data";
Blockly.Msg.CPF_EXTEN_SENSOR_TCS34725_B = "Blue";
Blockly.Msg.CPF_EXTEN_SENSOR_TCS34725_COLORTEMP = "Color Temperatures";
Blockly.Msg.CPF_EXTEN_SENSOR_TCS34725_COMP = "data";
Blockly.Msg.CPF_EXTEN_SENSOR_TCS34725_DATATYPE = "Read object";
Blockly.Msg.CPF_EXTEN_SENSOR_TCS34725_G = "Green";
Blockly.Msg.CPF_EXTEN_SENSOR_TCS34725_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_SENSOR_TCS34725_R = "Red";
Blockly.Msg.CPF_EXTEN_SENSOR_TCS34725_TITLE = "RGB Color Sensor";
Blockly.Msg.CPF_EXTEN_SENSOR_TCS34725_TOOLTIP = "get RGB & color temperatures";
Blockly.Msg.CPF_EXTEN_SERVO_DEGREE = "degree ";
Blockly.Msg.CPF_EXTEN_SERVO_DELAYTIME = "delay time(ms)) ";
Blockly.Msg.CPF_EXTEN_SERVO_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_SERVO_TITLE = "Servo ";
Blockly.Msg.CPF_EXTEN_SERVO_TOOLTIP = "Moves servo to degree 0~180";
Blockly.Msg.CPF_EXTEN_SPDT_RELAY_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_SPDT_RELAY_TITLE = "SPDT Relay ";
Blockly.Msg.CPF_EXTEN_SPDT_RELAY_TOOLTIP = "Single Pole Double Throw Relay(SPDT)";
Blockly.Msg.CPF_EXTEN_TM1637LED_BRIGHTNESS_DARKEST = "BRIGHT_DARKEST";
Blockly.Msg.CPF_EXTEN_TM1637LED_BRIGHTNESS_SET = "LED Brightness Setting";
Blockly.Msg.CPF_EXTEN_TM1637LED_BRIGHTNESS_TYPICAL = "BRIGHT_TYPICAL";
Blockly.Msg.CPF_EXTEN_TM1637LED_CLEAR_TITLE = "Clear Dispaly";
Blockly.Msg.CPF_EXTEN_TM1637LED_CLEAR_TOOLTIP = "Clears the Display screen.";
Blockly.Msg.CPF_EXTEN_TM1637LED_DISPLAY_DATA_TITLE = "4-Digit Display";
Blockly.Msg.CPF_EXTEN_TM1637LED_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_TM1637LED_PIN_CLK = "Clk Pin";
Blockly.Msg.CPF_EXTEN_TM1637LED_PIN_DATA = "Data Pin";
Blockly.Msg.CPF_EXTEN_TM1637LED_TITLE = "4-Digit Display";
Blockly.Msg.CPF_EXTEN_TM1637LED_TOOLTIP = "Prints number to the display.";
Blockly.Msg.CPF_EXTEN_TM1637_DIGIT_1 = "Digital 1";
Blockly.Msg.CPF_EXTEN_TM1637_DIGIT_2 = "Digital 2";
Blockly.Msg.CPF_EXTEN_TM1637_DIGIT_3 = "Digital 3";
Blockly.Msg.CPF_EXTEN_TM1637_DIGIT_4 = "Digital 4";
Blockly.Msg.CPF_EXTEN_TM1637_POINT = "Point";
Blockly.Msg.CPF_EXTEN_ULTRASONIC_DISTANCE_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_ULTRASONIC_DISTANCE_TITLE = "Ultrasonic Disrance";
Blockly.Msg.CPF_EXTEN_ULTRASONIC_DISTANCE_TOOLTIP = "Ultrasonic distance return and setting";
Blockly.Msg.CPF_EXTEN_ULTRASONIC_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_ULTRASONIC_SETTING_ECHO = "Echo Pin#";
Blockly.Msg.CPF_EXTEN_ULTRASONIC_SETTING_TITLE = "Ultrasonic(HC-SR04) Sensor";
Blockly.Msg.CPF_EXTEN_ULTRASONIC_SETTING_TOOLTIP = "Ultrasonic(HC-SR04)Pin Setting.";
Blockly.Msg.CPF_EXTEN_ULTRASONIC_SETTING_TRIG = "Trig Pin#";
Blockly.Msg.CPF_EXTEN_VIBRATION_MOTOR_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_EXTEN_VIBRATION_MOTOR_TITLE = "Vibration Motor ";
Blockly.Msg.CPF_EXTEN_VIBRATION_MOTOR_TOOLTIP = "Enable/Disable Vibration Motor ";
Blockly.Msg.CPF_EXTEN_WRITE_VALUE = "Write Value";
Blockly.Msg.CPF_INOUT_UI_GET_VALUE = "Get control panel value";
Blockly.Msg.CPF_INOUT_UI_SET_VALUE = "Set control panel value";
Blockly.Msg.CPF_NO_TONE_PIN = "no tone/voice Pin#";
Blockly.Msg.CPF_TONE_APPENDTEXT_DURATION = "duration";
Blockly.Msg.CPF_TONE_APPENDTEXT_FREQ = "frequency";
Blockly.Msg.CPF_TONE_APPENDTEXT_PIN = "Tone/speaker Pin#";
Blockly.Msg.CPF_TONE_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.CPF_TONE_TITLE = "Tone";
Blockly.Msg.CPF_TONE_TOOLTIP = "The pin can be connected to buzzer/speaker to play tone";
Blockly.Msg.DELETE_ALL_BLOCKS = "Delete all %1 blocks?";
Blockly.Msg.DELETE_BLOCK = "Delete Block";
Blockly.Msg.DELETE_BLOCKS_LOAD_LESSON = "Delete all blocks and reset to new lesson?";
Blockly.Msg.DELETE_X_BLOCKS = "Delete %1 Blocks";
Blockly.Msg.DISABLE_BLOCK = "Disable Block";
Blockly.Msg.DUPLICATE_BLOCK = "Duplicate";
Blockly.Msg.ENABLE_BLOCK = "Enable Block";
Blockly.Msg.EXPAND_ALL = "Expand Blocks";
Blockly.Msg.EXPAND_BLOCK = "Expand Block";
Blockly.Msg.EXTERNAL_INPUTS = "External Inputs";
Blockly.Msg.HELP = "Help";
Blockly.Msg.INLINE_INPUTS = "Inline Inputs";
Blockly.Msg.INOUT_ANALOG_READ = "Reads analog data; Return value between 0 and 1024";
Blockly.Msg.INOUT_ANA_READ = "AnalogRead PIN#";
Blockly.Msg.INOUT_ANA_WRITE = "Analog Write";
Blockly.Msg.INOUT_BUI_LED = "Integrated LED Stat";
Blockly.Msg.INOUT_DIGITAL_READ = "Reads the value from a specified digital pin, either HIGH or LOW";
Blockly.Msg.INOUT_DIG_READ = "Digital read PIN#";
Blockly.Msg.INOUT_HIGH_LEVEL = "HIGH";
Blockly.Msg.INOUT_LOW_LEVEL = "LOW";
Blockly.Msg.INOUT_STAT = "STAT";
Blockly.Msg.INOUT_VALUE = "Value";
Blockly.Msg.INPOUT_DIGITAL_WRITE = "DigitalWrite PIN#";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "create empty list";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Returns a list, of length 0, containing no data records";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "list";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Add, remove, or reorder sections to reconfigure this list block.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "create list with";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Add an item to the list.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Create a list with any number of items.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "first";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# from end";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";
Blockly.Msg.LISTS_GET_INDEX_GET = "get";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "get and remove";
Blockly.Msg.LISTS_GET_INDEX_LAST = "last";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "random";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "remove";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Returns the first item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Returns the item at the specified position in a list. #1 is the last item.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Returns the item at the specified position in a list. #1 is the first item.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Returns the last item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Returns a random item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Removes and returns the first item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Removes and returns the item at the specified position in a list. #1 is the last item.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Removes and returns the item at the specified position in a list. #1 is the first item.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Removes and returns the last item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Removes and returns a random item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Removes the first item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Removes the item at the specified position in a list. #1 is the last item.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Removes the item at the specified position in a list. #1 is the first item.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Removes the last item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Removes a random item in a list.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "to # from end";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "to #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "to last";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "get sub-list from first";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "get sub-list from # from end";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "get sub-list from #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Creates a copy of the specified portion of a list.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "find first occurrence of item";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";
Blockly.Msg.LISTS_INDEX_OF_LAST = "find last occurrence of item";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Returns the index of the first/last occurrence of the item in the list. Returns 0 if item is not found.";
Blockly.Msg.LISTS_INLIST = "in list";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 is empty";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Returns true if the list is empty.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";
Blockly.Msg.LISTS_LENGTH_TITLE = "length of %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Returns the length of a list.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_REPEAT_TITLE = "create list with item %1 repeated %2 times";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Creates a list consisting of the given value repeated the specified number of times.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "as";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "insert at";
Blockly.Msg.LISTS_SET_INDEX_SET = "set";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Inserts the item at the start of a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Inserts the item at the specified position in a list. #1 is the last item.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Inserts the item at the specified position in a list. #1 is the first item.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Append the item to the end of a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Inserts the item randomly in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Sets the first item in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Sets the item at the specified position in a list. #1 is the last item.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Sets the item at the specified position in a list. #1 is the first item.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Sets the last item in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Sets a random item in a list.";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "ascending";
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "descending";
Blockly.Msg.LISTS_SORT_TITLE = "sort %1 %2 %3";
Blockly.Msg.LISTS_SORT_TOOLTIP = "Sort a copy of a list.";
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alphabetic, ignore case";
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numeric";
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alphabetic";
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "make list from text";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "make text from list";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Join a list of texts into one text, separated by a delimiter.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Split text into a list of texts, breaking at each delimiter.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "with delimiter";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "false";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Returns either true or false.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "true";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Return true if both inputs equal each other.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Return true if the first input is greater than the second input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Return true if the first input is greater than or equal to the second input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Return true if the first input is smaller than the second input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Return true if the first input is smaller than or equal to the second input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Return true if both inputs are not equal to each other.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";
Blockly.Msg.LOGIC_NEGATE_TITLE = "not %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Returns true if the input is false. Returns false if the input is true.";
Blockly.Msg.LOGIC_NULL = "null";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Returns null.";
Blockly.Msg.LOGIC_OPERATION_AND = "and";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";
Blockly.Msg.LOGIC_OPERATION_OR = "or";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Return true if both inputs are true.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Return true if at least one of the inputs is true.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "if false";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "if true";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Check the condition in 'test'. If the condition is true, returns the 'if true' value; otherwise returns the 'if false' value.";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://en.wikipedia.org/wiki/Arithmetic";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Return the sum of the two numbers.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Return the quotient of the two numbers.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Return the difference of the two numbers.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Return the product of the two numbers.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Return the first number raised to the power of the second number.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_TITLE = "change %1 by %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Add a number to variable '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";
Blockly.Msg.MATH_CONSTRAIN_TITLE = "constrain %1 low %2 high %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Constrain a number to be between the specified limits (inclusive).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "is divisible by";
Blockly.Msg.MATH_IS_EVEN = "is even";
Blockly.Msg.MATH_IS_NEGATIVE = "is negative";
Blockly.Msg.MATH_IS_ODD = "is odd";
Blockly.Msg.MATH_IS_POSITIVE = "is positive";
Blockly.Msg.MATH_IS_PRIME = "is prime";
Blockly.Msg.MATH_IS_TOOLTIP = "Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number. Returns true or false.";
Blockly.Msg.MATH_IS_WHOLE = "is whole";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "remainder of %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Return the remainder from dividing the two numbers.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";
Blockly.Msg.MATH_NUMBER_HELPURL = "https://en.wikipedia.org/wiki/Number";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "A number.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "average of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "max of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "median of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "min of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "modes of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "random item of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "standard deviation of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "sum of list";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Return the average (arithmetic mean) of the numeric values in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Return the largest number in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Return the median number in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Return the smallest number in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Return a list of the most common item(s) in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Return a random element from the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Return the standard deviation of the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Return the sum of all the numbers in the list.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "random fraction";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "random integer from %1 to %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Return a random integer between the two specified limits, inclusive.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "round";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "round down";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "round up";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Round a number up or down.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://en.wikipedia.org/wiki/Square_root";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absolute";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "square root";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Return the absolute value of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Return e to the power of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Return the natural logarithm of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Return the base 10 logarithm of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Return the negation of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Return 10 to the power of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Return the square root of a number.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";
Blockly.Msg.MATH_TRIG_ACOS = "acos";
Blockly.Msg.MATH_TRIG_ASIN = "asin";
Blockly.Msg.MATH_TRIG_ATAN = "atan";
Blockly.Msg.MATH_TRIG_COS = "cos";
Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_SIN = "sin";
Blockly.Msg.MATH_TRIG_TAN = "tan";
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Return the arccosine of a number.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Return the arcsine of a number.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Return the arctangent of a number.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Return the cosine of a degree (not radian).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Return the sine of a degree (not radian).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Return the tangent of a degree (not radian).";
Blockly.Msg.ME = "Me";
Blockly.Msg.MOTODUINO_CPFAOP_CONTENT_UI_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.MOTODUINO_CPFAOP_CONTENT_UI_SET = "Panel Set ";
Blockly.Msg.MOTODUINO_CPFAOP_CONTENT_UI_TITLE = "Title";
Blockly.Msg.MOTODUINO_CPFAOP_CONTENT_UI_TOOLTIP = "Set Title Content";
Blockly.Msg.MOTODUINO_CPFAOP_DATE_GET = "Get Date";
Blockly.Msg.MOTODUINO_CPFAOP_DATE_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.MOTODUINO_CPFAOP_DATE_TITLE = "Date";
Blockly.Msg.MOTODUINO_CPFAOP_DATE_TOOLTIP = "Get current date";
Blockly.Msg.MOTODUINO_CPF_FAN_CONTROL_GET_VALUE = "Get Speed";
Blockly.Msg.MOTODUINO_CPF_FAN_CONTROL_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.MOTODUINO_CPF_FAN_CONTROL_SET_VALUE = "Set Speed";
Blockly.Msg.MOTODUINO_CPF_FAN_CONTROL_TITLE = "Fan Control";
Blockly.Msg.MOTODUINO_CPF_FAN_CONTROL_TOOLTIP = "Temperature Sensor value";
Blockly.Msg.MOTODUINO_CPF_FAN_LEVEL_HIGH = "High";
Blockly.Msg.MOTODUINO_CPF_FAN_LEVEL_MID = "Middle";
Blockly.Msg.MOTODUINO_CPF_FAN_LEVEL_SLOW = "Slow";
Blockly.Msg.MOTODUINO_CPF_FAN_LEVEL_STOP = "Stop";
Blockly.Msg.MOTODUINO_CPF_FAN_UI_GET_VALUE = "Get setting speed";
Blockly.Msg.MOTODUINO_CPF_FAN_UI_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.MOTODUINO_CPF_FAN_UI_TITLE = "Fan ";
Blockly.Msg.MOTODUINO_CPF_FAN_UI_TOOLTIP = "Get Fan Speed";
Blockly.Msg.MOTODUINO_CPF_LED_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.MOTODUINO_CPF_LED_SET_OFF = "OFF";
Blockly.Msg.MOTODUINO_CPF_LED_SET_ON = "ON";
Blockly.Msg.MOTODUINO_CPF_LED_SET_VALUE = "Set ";
Blockly.Msg.MOTODUINO_CPF_LED_TITLE = "White LED";
Blockly.Msg.MOTODUINO_CPF_LED_TOOLTIP = "white LED Control";
Blockly.Msg.MOTODUINO_CPF_LIGHT_SENSOR_GET_VALUE = "Get Value";
Blockly.Msg.MOTODUINO_CPF_LIGHT_SENSOR_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.MOTODUINO_CPF_LIGHT_SENSOR_TITLE = "Light";
Blockly.Msg.MOTODUINO_CPF_LIGHT_SENSOR_TOOLTIP = "Light Sensor value";
Blockly.Msg.MOTODUINO_CPF_LIGHT_UI_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.MOTODUINO_CPF_LIGHT_UI_SET = "Panel Set ";
Blockly.Msg.MOTODUINO_CPF_LIGHT_UI_TITLE = "Light";
Blockly.Msg.MOTODUINO_CPF_LIGHT_UI_TOOLTIP = "Set Light UI";
Blockly.Msg.MOTODUINO_CPF_RGBLED_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.MOTODUINO_CPF_RGBLED_TITLE = "RGB LED Setting";
Blockly.Msg.MOTODUINO_CPF_RGBLED_TOOLTIP = "RGB LED Colour Setting";
Blockly.Msg.MOTODUINO_CPF_RGBLED_UI_GET_VALUE = "Get setting value";
Blockly.Msg.MOTODUINO_CPF_RGBLED_UI_GET_VALUE_B = "BLUE";
Blockly.Msg.MOTODUINO_CPF_RGBLED_UI_GET_VALUE_G = "GREEN";
Blockly.Msg.MOTODUINO_CPF_RGBLED_UI_GET_VALUE_R = "RED";
Blockly.Msg.MOTODUINO_CPF_RGBLED_UI_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.MOTODUINO_CPF_RGBLED_UI_TITLE = "RGB LED";
Blockly.Msg.MOTODUINO_CPF_RGBLED_UI_TOOLTIP = "Get RGB-Led Lightness";
Blockly.Msg.MOTODUINO_CPF_TEMPERATURE_SENSOR_GET_VALUE = "Get Temp.";
Blockly.Msg.MOTODUINO_CPF_TEMPERATURE_SENSOR_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.MOTODUINO_CPF_TEMPERATURE_SENSOR_TITLE = "Temperature";
Blockly.Msg.MOTODUINO_CPF_TEMPERATURE_SENSOR_TOOLTIP = "Temperature Sensor value";
Blockly.Msg.MOTODUINO_CPF_TEMPERATURE_UI_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.MOTODUINO_CPF_TEMPERATURE_UI_SET = "Panel Set";
Blockly.Msg.MOTODUINO_CPF_TEMPERATURE_UI_TITLE = "Temperature";
Blockly.Msg.MOTODUINO_CPF_TEMPERATURE_UI_TOOLTIP = "Set Temperature UI";
Blockly.Msg.MOTODUINO_CPF_TITLE_UI_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.MOTODUINO_CPF_TITLE_UI_SET = "Panel Set ";
Blockly.Msg.MOTODUINO_CPF_TITLE_UI_SET_TOOLTIP = "Set Title Name";
Blockly.Msg.MOTODUINO_CPF_TITLE_UI_TITLE = "Title Name";
Blockly.Msg.MOTODUINO_CPF_WHITELED_UI_GET_VALUE = "Get setting value";
Blockly.Msg.MOTODUINO_CPF_WHITELED_UI_HELPURL = "http://www.acer.com/ac/zh/TW/content/byoc-consumer";
Blockly.Msg.MOTODUINO_CPF_WHITELED_UI_TITLE = "white LED";
Blockly.Msg.MOTODUINO_CPF_WHITELED_UI_TOOLTIP = "Get White-Led Lightness";
Blockly.Msg.NEW_VARIABLE = "New variable...";
Blockly.Msg.NEW_VARIABLE_TITLE = "New variable name:";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "allow statements";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "with:";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Run the user-defined function '%1'.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Run the user-defined function '%1' and use its output.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "with:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Create '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Describe this function...";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "do something";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "to";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Creates a function with no output.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "return";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Creates a function with an output.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Warning: This function has duplicate parameters.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Highlight function definition";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "If a value is true, then return a second value.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Warning: This block may be used only within a function definition.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "input name:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Add an input to the function.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "inputs";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Add, remove, or reorder inputs to this function.";
Blockly.Msg.REDO = "Redo";
Blockly.Msg.REMOVE_COMMENT = "Remove Comment";
Blockly.Msg.RENAME_VARIABLE = "Rename variable...";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Rename all '%1' variables to:";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "append text";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";
Blockly.Msg.TEXT_APPEND_TO = "to";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Append some text to variable '%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "to lower case";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "to Title Case";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "to UPPER CASE";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Return a copy of the text in a different case.";
Blockly.Msg.TEXT_CHARAT_FIRST = "get first letter";
Blockly.Msg.TEXT_CHARAT_FROM_END = "get letter # from end";
Blockly.Msg.TEXT_CHARAT_FROM_START = "get letter #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "in text";
Blockly.Msg.TEXT_CHARAT_LAST = "get last letter";
Blockly.Msg.TEXT_CHARAT_RANDOM = "get random letter";
Blockly.Msg.TEXT_CHARAT_TAIL = "";
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Returns the letter at the specified position.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Add an item to the text.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "join";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Add, remove, or reorder sections to reconfigure this text block.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "to letter # from end";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "to letter #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "to last letter";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "in text";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "get substring from first letter";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "get substring from letter # from end";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "get substring from letter #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Returns a specified portion of the text.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "in text";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "find first occurrence of text";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "find last occurrence of text";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Returns the index of the first/last occurrence of the first text in the second text. Returns 0 if text is not found.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 is empty";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Returns true if the provided text is empty.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "create text with";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Create a piece of text by joining together any number of items.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";
Blockly.Msg.TEXT_LENGTH_TITLE = "length of %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Returns the number of letters (including spaces) in the provided text.";
Blockly.Msg.TEXT_NEWLINE_TEXT = "newline";
Blockly.Msg.TEXT_NEWLINE_TITLE = "text newline ";
Blockly.Msg.TEXT_NEWLINE_TOOLTIP = "string with newline ";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";
Blockly.Msg.TEXT_PRINT_TITLE = "print %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Print the specified text, number or other value.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Prompt for user for a number.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Prompt for user for some text.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "prompt for number with message";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "prompt for text with message";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "A letter, word, or line of text.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "trim spaces from both sides of";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "trim spaces from left side of";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "trim spaces from right side of";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Return a copy of the text with spaces removed from one or both ends.";
Blockly.Msg.TODAY = "Today";
Blockly.Msg.UNDO = "Undo";
Blockly.Msg.VARIABLES_DEFAULT_NAME = "item";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Create 'set %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Returns the value of this variable.";
Blockly.Msg.VARIABLES_SET = "set %1 to %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Create 'get %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Sets this variable to be equal to the input.";
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;